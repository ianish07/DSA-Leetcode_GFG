class Solution {
public:
    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
        
         if (nums1.empty() || nums2.empty() || k == 0) {
            return {};
        }
        priority_queue<pair<int,vector<int>>> pq;
        vector<vector<int>> v;
        for(int i=0; i<nums1.size(); i++) {
            for(int j=0; j<nums2.size(); j++) {
               if(pq.size() < k)
                    pq.push({nums1[i]+nums2[j], vector<int>({nums1[i],nums2[j]})});
                else if(pq.size() == k && pq.top().first > nums1[i]+nums2[j]) {
                    pq.pop();
                    pq.push({nums1[i]+nums2[j], vector<int>({nums1[i],nums2[j]})});
                }
            }
        }
        while(!pq.empty())
        {
            v.push_back(pq.top().second);
            pq.pop();
        }
        return v;
        }
};

//find better