int max_area(vector<int> &v){
        int n=v.size();
        vector<int> l(n,-1),r(n,n);
        stack<int> st1,st2;
        for(int i=0;i<n;i++){
            while(!st1.empty()){
                int x=st1.top();
                if(v[x]>=v[i]){
                    st1.pop();
                }
                else{
                    l[i]=x;
                    break;
                }
            }
            st1.push(i);
        }
        for(int i=n-1;i>=0;i--){
            while(!st2.empty()){
                int x=st2.top();
                if(v[x]>=v[i]){
                    st2.pop();
                }
                else{
                    r[i]=x;
                    break;
                }
            }
            st2.push(i);
        }
        
        int ans=0;
        for(int i=0;i<n;i++){
            int x=min(v[i],r[i]-l[i]-1);
            ans=max(ans,x*x);
        }
        return ans;
    }
    
    int maximalSquare(vector<vector<char>>& matrix) {
        int n=matrix.size();
        if(n==0){
            return 0;
        }
        int m=matrix[0].size();
        if(m==0){
            return 0;
        }
        vector<vector<int> > v(n,vector<int> (m));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(i==0){
                    v[i][j]=matrix[i][j]-'0';
                }
                else{
                    if(matrix[i][j]=='0')
                        v[i][j]=0;
                    else
                        v[i][j]=v[i-1][j]+1;
                }
            }
        }
        
        int ans=0;
        for(int i=0;i<n;i++){
            ans=max(ans,max_area(v[i]));
        }
        return ans;
    }