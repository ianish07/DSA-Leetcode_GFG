#include <bits/stdc++.h>
using namespace std;

int main() {
	//code
	int t,n;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    int arr[n];
	    
	    for(int i=0;i<n;i++)
	        cin>>arr[i];
	    
	    vector<int> right;
	    vector<int> left;
	    stack<pair<int,int>> s1;
	    stack<pair<int,int>> s2;
	    //smallest to right
	    for(int i=n-1;i>=0;i--)
	    {
	        if(s1.empty())
	            right.push_back(n);
	        
	        else if(s1.size()>0 && s1.top().first<arr[i])
	            right.push_back(s1.top().second);
	       
	        else if(s1.size()>0 && s1.top().first>=arr[i])
	        {
	            while(s1.size()>0 && s1.top().first>=arr[i]) 
	                s1.pop();
	           
	            if(s1.size()==0)
	                right.push_back(n);
	           else
	                right.push_back(s1.top().second);
	        }
	        s1.push({arr[i],i});
	    }
	    reverse(right.begin(),right.end());
	    
	    //smallest to left
	    for(int i=0;i<n;i++)
	    {
	        if(s2.empty())
	            left.push_back(-1);
	        
	        else if(s2.size()>0 && s2.top().first<arr[i])
	            left.push_back(s2.top().second);
	       
	        else if(s2.size()>0 && s2.top().first>=arr[i])
	        {
	            while(s2.size()>0 &&s2.top().first>=arr[i]) 
	                s2.pop();
	           
	            if(s2.size()==0)
	                left.push_back(-1);
	           else
	                left.push_back(s2.top().second);
	        }
	        s2.push({arr[i],i});
	    }
	    
	    vector<int> width;
	    vector<int> area;
	    
	    for(int i=0;i<n;i++)
	        width.push_back(right[i]-left[i]-1);
	    
	    for(int i=0;i<n;i++)
	        area.push_back(arr[i]*width[i]);
	    
	    cout<<*max_element(area.begin(),area.end())<<endl;     
	}
	return 0;
}